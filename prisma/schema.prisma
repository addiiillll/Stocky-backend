generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rewards RewardEvent[]
  ledgerEntries LedgerEntry[]

  @@map("users")
}

model Stock {
  id     String @id @default(cuid())
  symbol String @unique
  name   String
  
  rewards RewardEvent[]
  prices  StockPrice[]
  ledgerEntries LedgerEntry[]

  @@map("stocks")
}

model RewardEvent {
  id        String   @id @default(cuid())
  userId    String
  stockId   String
  quantity  Decimal  @db.Decimal(18, 6)
  timestamp DateTime @default(now())
  
  user  User  @relation(fields: [userId], references: [id])
  stock Stock @relation(fields: [stockId], references: [id])

  @@map("reward_events")
}

model StockPrice {
  id        String   @id @default(cuid())
  stockId   String
  price     Decimal  @db.Decimal(18, 4)
  timestamp DateTime @default(now())
  
  stock Stock @relation(fields: [stockId], references: [id])

  @@map("stock_prices")
}

model LedgerEntry {
  id          String      @id @default(cuid())
  userId      String
  stockId     String?
  entryType   EntryType
  amount      Decimal     @db.Decimal(18, 4)
  quantity    Decimal?    @db.Decimal(18, 6)
  description String
  timestamp   DateTime    @default(now())
  
  user  User   @relation(fields: [userId], references: [id])
  stock Stock? @relation(fields: [stockId], references: [id])

  @@map("ledger_entries")
}

enum EntryType {
  STOCK_REWARD
  CASH_OUTFLOW
  BROKERAGE_FEE
  STT_FEE
  GST_FEE
  ADJUSTMENT
}